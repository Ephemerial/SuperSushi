// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SuperSushi.Data;

namespace SuperSushi.Data.Migrations
{
    [DbContext(typeof(SuperSushiContext))]
    [Migration("20201002132058_CheckLengthMenuName")]
    partial class CheckLengthMenuName
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SuperSushi.Data.Gerecht", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Omschrijving")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<decimal>("Prijs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Soort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Gerechten");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Omschrijving = "Maki Tuna",
                            Prijs = 0m,
                            Soort = 0
                        },
                        new
                        {
                            Id = 2,
                            Omschrijving = "Sashimi Salmon",
                            Prijs = 0m,
                            Soort = 0
                        },
                        new
                        {
                            Id = 3,
                            Omschrijving = "Caramelised Crickets ",
                            Prijs = 0m,
                            Soort = 3
                        },
                        new
                        {
                            Id = 4,
                            Omschrijving = "Cinnamon Worms",
                            Prijs = 0m,
                            Soort = 3
                        },
                        new
                        {
                            Id = 5,
                            Omschrijving = "Nigiri Tofu",
                            Prijs = 0m,
                            Soort = 2
                        },
                        new
                        {
                            Id = 6,
                            Omschrijving = "Gunkam Zeewier",
                            Prijs = 0m,
                            Soort = 2
                        },
                        new
                        {
                            Id = 7,
                            Omschrijving = "Tebasaki Kip",
                            Prijs = 0m,
                            Soort = 1
                        },
                        new
                        {
                            Id = 8,
                            Omschrijving = "Teriyaki Biefstuk",
                            Prijs = 0m,
                            Soort = 1
                        });
                });

            modelBuilder.Entity("SuperSushi.Data.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KortingPercentage")
                        .HasColumnType("int");

                    b.Property<string>("Naam")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.HasKey("Id");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            KortingPercentage = 0,
                            Naam = "Smells Fishy"
                        },
                        new
                        {
                            Id = 2,
                            KortingPercentage = 0,
                            Naam = "Bunny Bugs"
                        },
                        new
                        {
                            Id = 3,
                            KortingPercentage = 0,
                            Naam = "Mighty Meaty"
                        });
                });

            modelBuilder.Entity("SuperSushi.Data.MenuGerecht", b =>
                {
                    b.Property<int>("GerechtId")
                        .HasColumnType("int");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.HasKey("GerechtId", "MenuId");

                    b.HasIndex("MenuId");

                    b.ToTable("MenuGerechten");
                });

            modelBuilder.Entity("SuperSushi.Data.MenuGerecht", b =>
                {
                    b.HasOne("SuperSushi.Data.Gerecht", "Gerecht")
                        .WithMany("Onderdeelvan")
                        .HasForeignKey("GerechtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperSushi.Data.Menu", "Menu")
                        .WithMany("Bevat")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
